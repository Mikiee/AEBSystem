@model IEnumerable<AEBSystem.Core.ViewModels.TestReportStatusViewModel>

<div class="row wrapper border-bottom white-bg page-heading">

    @{
        ViewBag.Title = "Test Report Status";
    }

    <h2><strong>Test Report Status</strong></h2>



</div>

<div class="wrapper wrapper-content animated fadeInRight">


    <div class="ibox-content">
        @using (Html.BeginForm("ViewApplications", "TRTracking", FormMethod.Get))
        {

            <div class="row">
                <div class="col-sm-6">
                    <h3>
                        <u>@Html.ActionLink("Go to Search Airmen", "Index")</u> | 
                        <u>@Html.ActionLink("Batch Process", "BatchProcess")</u>                        
                    </h3>
                </div>
                <div class="col-sm-6">
                    <div class="input-group">
                        @*<input type="text" placeholder="Search" class="input-sm form-control"/>*@
                        @Html.TextBox("search", null, new { @class = "input-sm form-control" })<span class="input-group-btn">
                            <input type="submit" name="submit" value="Search" class="btn btn-sm btn-primary" />
                        </span>
                    </div>
                </div>
            </div>
        }
        <hr />

        <table class="table">
            <tr>
                <th>
                    Tag as
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PEL)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Fullname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.License)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Remarks)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BatchNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ControlNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClaimedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastModifiedBy)
                </th>
               
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.ActionLink("Details", "TestReportStatusFullView", new { Id = item.Id, PEL = item.PEL }, new { @class = "btn btn-sm btn-outline btn-default", @role = "button" }) | 
                        @{                           
                            if (item.Status.Contains("Initial"))
                            {
                                @Html.ActionLink("Control", "Control", new { Id = item.Id, PEL = item.PEL }, new { @class = "btn btn-sm btn-outline btn-success", @role = "button" })
                            }
                            
                            else if (item.Status.Contains("Recieved"))
                            {
                                @Html.ActionLink("Release", "Release", new { Id = item.Id, PEL = item.PEL }, new { @class = "btn btn-sm btn-outline btn-primary", @role = "button" })
                            }

                        }                       
                       
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PEL)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Fullname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.License)
                    </td>
                    <td>
                        @{
                            var cssClass = "";
                            if (item.Status.Contains("Initial"))
                            {
                                cssClass = "label label-warning";
                            }
                            else if (item.Status.Contains("Controlled"))
                            {
                                cssClass = "label label-success";
                            }
                            else if (item.Status.Contains("Pending"))
                            {
                                cssClass = "label label-danger";
                            }
                            else if (item.Status.Contains("Recieved"))
                            {
                                cssClass = "label label-primary";
                            }
                            else
                            {
                                cssClass = "label label-default";
                            }
                            <span class="@cssClass">@Html.DisplayFor(modelItem => item.Status)</span>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Remarks)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BatchNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ControlNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClaimedBy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastModifiedBy)
                    </td>
                    
                </tr>
                            }

        </table>
    </div>
</div>
